{"version":3,"file":"main.js","sourceRoot":"","sources":["../electron/main.ts"],"names":[],"mappings":"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","sourcesContent":["import { app, BrowserWindow, ipcMain } from 'electron'\nimport * as path from 'path'\nimport * as fs from 'fs'\nimport fetch from 'node-fetch'\n\n// Handle creating/removing shortcuts on Windows when installing/uninstalling\ntry {\n  if (require('electron-squirrel-startup')) {\n    app.quit()\n  }\n} catch (err) {\n  // Ignore if module is not found\n  console.log('electron-squirrel-startup not found, skipping...')\n}\n\ninterface WindowState {\n  width: number\n  height: number\n  x?: number\n  y?: number\n  isMaximized?: boolean\n}\n\nconst defaultWindowState: WindowState = {\n  width: 1200,\n  height: 800\n}\n\nfunction getWindowState(): WindowState {\n  try {\n    const userDataPath = app.getPath('userData')\n    const stateFilePath = path.join(userDataPath, 'window-state.json')\n    \n    if (fs.existsSync(stateFilePath)) {\n      const state = JSON.parse(fs.readFileSync(stateFilePath, 'utf8'))\n      return { ...defaultWindowState, ...state }\n    }\n  } catch (err) {\n    console.error('Failed to load window state:', err)\n  }\n  return defaultWindowState\n}\n\nfunction saveWindowState(window: BrowserWindow): void {\n  try {\n    const state: WindowState = {\n      width: window.getBounds().width,\n      height: window.getBounds().height,\n      x: window.getBounds().x,\n      y: window.getBounds().y,\n      isMaximized: window.isMaximized()\n    }\n    \n    const userDataPath = app.getPath('userData')\n    const stateFilePath = path.join(userDataPath, 'window-state.json')\n    fs.writeFileSync(stateFilePath, JSON.stringify(state))\n  } catch (err) {\n    console.error('Failed to save window state:', err)\n  }\n}\n\nasync function createWindow(): Promise<BrowserWindow> {\n  const windowState = getWindowState()\n\n  // Create the browser window.\n  const mainWindow = new BrowserWindow({\n    ...windowState,\n    minWidth: 800,\n    minHeight: 600,\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: true,\n      preload: path.join(__dirname, 'preload.js')\n    },\n    show: false,\n    backgroundColor: '#1a1a1a', // Dark background\n    titleBarStyle: 'hidden',\n    frame: process.platform !== 'darwin', // Use native frame on macOS\n  })\n\n  if (windowState.isMaximized) {\n    mainWindow.maximize()\n  }\n\n  // Save window state on close\n  mainWindow.on('close', () => {\n    saveWindowState(mainWindow)\n  })\n\n  // Wait for the window to be ready before showing\n  mainWindow.once('ready-to-show', () => {\n    mainWindow.show()\n    // Open DevTools in development\n    if (!app.isPackaged) {\n      mainWindow.webContents.openDevTools()\n    }\n  })\n\n  try {\n    // In development, load from Vite dev server\n    if (!app.isPackaged) {\n      await connectToDevServer(mainWindow)\n    } else {\n      // In production, load the built index.html\n      await mainWindow.loadFile(path.join(__dirname, '../dist/index.html'))\n    }\n  } catch (err) {\n    console.error('Failed to load the app:', err)\n    app.quit()\n  }\n\n  return mainWindow\n}\n\nasync function connectToDevServer(window: BrowserWindow, retries = 30): Promise<void> {\n  const devServerUrl = 'http://localhost:5173'\n  \n  for (let i = 0; i < retries; i++) {\n    try {\n      const response = await fetch(devServerUrl)\n      if (response.ok) {\n        await window.loadURL(devServerUrl)\n        return\n      }\n    } catch (err) {\n      console.log(`Dev server not ready, attempt ${i + 1} of ${retries}...`)\n    }\n    await new Promise(resolve => setTimeout(resolve, 1000))\n  }\n  \n  throw new Error('Failed to connect to dev server after multiple attempts')\n}\n\n// Handle app lifecycle\nlet mainWindow: BrowserWindow | null = null\n\napp.whenReady().then(async () => {\n  mainWindow = await createWindow()\n\n  app.on('activate', async () => {\n    // On macOS it's common to re-create a window when the dock icon is clicked\n    if (BrowserWindow.getAllWindows().length === 0) {\n      mainWindow = await createWindow()\n    } else if (mainWindow) {\n      mainWindow.show()\n    }\n  })\n\n  // Set up IPC handlers\n  setupIpcHandlers()\n})\n\n// Quit when all windows are closed, except on macOS\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n})\n\napp.on('before-quit', () => {\n  if (mainWindow) {\n    saveWindowState(mainWindow)\n  }\n})\n\n// Set up IPC handlers\nfunction setupIpcHandlers(): void {\n  // Example IPC handler\n  ipcMain.handle('get-app-version', () => app.getVersion())\n\n  // Add more IPC handlers as needed\n}\n\n// Handle errors\nprocess.on('uncaughtException', (error) => {\n  console.error('Uncaught exception:', error)\n})\n\nprocess.on('unhandledRejection', (reason, promise) => {\n  console.error('Unhandled rejection at:', promise, 'reason:', reason)\n})"]}